name: dev

services:

  nginx:
    # image: nignx:1-alpine

    build:
      context: /home/safi/main/nginx
      dockerfile: Dockerfile.dev
      
    # volumes:
    #   - /home/safi/main/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf

    develop:
      watch:
        - action: sync+restart
          path: /home/safi/main/nginx/conf.d
          target: /etc/nginx/conf.d
      
    environment:
      # - NGINX_HOST=foobar.com
      - NGINX_PORT=80
    networks:
      - network
      
    depends_on:
      - tailwindcss
      - nextjs
      - expressjs

  tailwindcss:
    build:
      context: /home/safi/main/tailwindcss-app
      dockerfile: docker/Dockerfile.dev
    develop:
      watch:
        - action: sync
          path: /home/safi/main/tailwindcss-app
          target: /app
          ignore:
            - node_modules/

    networks:
      - network

  nextjs:

    # Build Image
    build:
      context: /home/safi/main/next-app
      dockerfile: docker/Dockerfile.dev

    # Local Image
    # image: next-app-image

    # nginx works with containers port
    # no need to expose
    # ports:
    #   - "3000:3000"

    # extra_hosts:
    #   - "nextjs.localhost:127.0.0.1"
    #   - "nextjs.localhost:host-gateway"

    # Watch is better then bind
    # volumes:
    #   - type: bind
    #     source: ${PWD}
    #     target: /app

    develop:
      watch:
        - action: sync
          path: /home/safi/main/next-app
          target: /app
          ignore:
            - node_modules/

    networks:
      - network

    depends_on:
      - expressjs


  expressjs:
    build:
      context: /home/safi/main/express-app
      dockerfile: docker/Dockerfile.dev

    # nginx works with containers port
    # no need to expose
    # ports:
    #   - "3001:3000"
    
    develop:
      watch:
        - action: sync
          path: /home/safi/main/express-app
          target: /app
          ignore:
            - node_modules/

    networks:
      - network

  mongodb:
    image: mongodb/mongodb-community-server:5.0.22-ubuntu2004
    restart: always
    volumes:
      - mongodb-data:/data/db
    networks:
      - network
    
  
networks:
  network:

volumes:
  mongodb-data: